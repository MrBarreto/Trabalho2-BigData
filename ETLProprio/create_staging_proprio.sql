CREATE TABLE IF NOT EXISTS PJ_Staging (
    ID_PJ PRIMARY KEY,
    CNPJ VARCHAR(18) UNIQUE NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Endereco VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS SEGUROS_Staging (
    ID_SEGUROS PRIMARY KEY,
    Vidros VARCHAR(255),
    Farois VARCHAR(255),
    Faixa_Indenizacao VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS PF_Staging (
    ID_PF PRIMARY KEY,
    Nome VARCHAR(255) NOT NULL,
    CPF VARCHAR(14) UNIQUE NOT NULL,
    CNH VARCHAR(20) UNIQUE NOT NULL,
    Categoria_CNH VARCHAR(5),
    Endereco VARCHAR(255),
    Nacionalidade VARCHAR(50),
    Data_Nascimento DATE,
    Data_Expedicao_CNH DATE,
    ID_PJ INTEGER,
    CONSTRAINT FK_PF_PJ FOREIGN KEY (ID_PJ) REFERENCES PJ_Staging(ID_PJ) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PATIO_Staging (
    ID_PATIO PRIMARY KEY,
    ID_PJ INTEGER NOT NULL,
    Endereco VARCHAR(255) NOT NULL,
    CONSTRAINT FK_PATIO_PJ FOREIGN KEY (ID_PJ) REFERENCES PJ_Staging(ID_PJ) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS VEICULO_Staging (
    ID_VEICULO PRIMARY KEY,
    Placa VARCHAR(10) UNIQUE NOT NULL,
    Chassi VARCHAR(17) UNIQUE NOT NULL,
    Grupo VARCHAR(50),
    Modelo VARCHAR(100),
    Marca VARCHAR(100),
    Cor VARCHAR(50),
    AC BOOLEAN DEFAULT FALSE,
    Crianca BOOLEAN DEFAULT FALSE,
    Bebe BOOLEAN DEFAULT FALSE,
    Teto_Solar BOOLEAN DEFAULT FALSE,
    Multimidia BOOLEAN DEFAULT FALSE,
    ID_PJ INTEGER NOT NULL,
);

CREATE TABLE IF NOT EXISTS VAGAS_Staging (
    ID_VAGAS PRIMARY KEY,
    ID_PATIO INTEGER NOT NULL,
    CONSTRAINT FK_VAGAS_PATIO FOREIGN KEY (ID_PATIO) REFERENCES PATIO_Staging(ID_PATIO) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS ESTADO_VEICULO_Staging (
    ID_ESTADO_VEICULO PRIMARY KEY,
    Pressao_Pneu FLOAT,
    Nivel_Oleo VARCHAR(50),
    Gasolina VARCHAR(50),
    Quilometragem FLOAT,
    Motor VARCHAR(100),
    Freios VARCHAR(100),
    Estado_Pneu VARCHAR(100),
    Vidros VARCHAR(100),
    Bateria VARCHAR(100),
    Estepe VARCHAR(100),
    Pintura VARCHAR(100),
    Retrovisor VARCHAR(100),
    Limpador_Parabrisa VARCHAR(100),
    Data_Revisao DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS LOCACAO_Staging (
    ID_LOCACAO PRIMARY KEY,
    Data_Retirada DATE NOT NULL,
    Data_Devolucao DATE,
    Vaga_Retirada INT,
    Vaga_Devolucao INT,
    ID_PF INTEGER NOT NULL,
    ID_ESTADO_VEICULO_Retirada INTEGER UNIQUE NOT NULL,
    ID_ESTADO_VEICULO_Devolucao INTEGER UNIQUE,
    ID_SEGUROS INTEGER,
    CONSTRAINT FK_LOCACAO_PF FOREIGN KEY (ID_PF) REFERENCES PF_Staging(ID_PF) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_ESTADO_RETIRADA FOREIGN KEY (ID_ESTADO_VEICULO_Retirada) REFERENCES ESTADO_VEICULO_Staging(ID_ESTADO_VEICULO) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_ESTADO_DEVOLUCAO FOREIGN KEY (ID_ESTADO_VEICULO_Devolucao) REFERENCES ESTADO_VEICULO_Staging(ID_ESTADO_VEICULO) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_SEGUROS FOREIGN KEY (ID_SEGUROS) REFERENCES SEGUROS_Staging(ID_SEGUROS) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT CHK_LOCACAO_DATAS CHECK (Data_Devolucao IS NULL OR Data_Devolucao >= Data_Retirada)
);

CREATE TABLE IF NOT EXISTS RESERVA_Staging (
    ID_RESERVA PRIMARY KEY,
    ID_VEICULO INTEGER NOT NULL,
    ID_PF INTEGER,
    ID_PJ INTEGER,
    Data_Inicio DATE NOT NULL,
    Data_Fim DATE NOT NULL,
    CONSTRAINT FK_RESERVA_VEICULO FOREIGN KEY (ID_VEICULO) REFERENCES VEICULO_Staging(ID_VEICULO) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_RESERVA_PF FOREIGN KEY (ID_PF) REFERENCES PF_Staging(ID_PF) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_RESERVA_PJ FOREIGN KEY (ID_PJ) REFERENCES PJ_Staging(ID_PJ) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT CHK_RESERVA_DATAS CHECK (Data_Fim >= Data_Inicio),
    CONSTRAINT CHK_RESERVA_CUSTOMER CHECK (ID_PF IS NOT NULL OR ID_PJ IS NOT NULL)
);